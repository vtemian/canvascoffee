// Generated by CoffeeScript 1.2.1-pre
(function() {
  var Battle;

  Battle = (function() {

    Battle.name = 'Battle';

    function Battle(opts) {
      this.squareHeight = opts.squareHeight;
      this.gameHolder = opts.gameHolder;
      this.canvasWidth = this.squareHeight * 10 * 2 + this.squareHeight * 2;
      this.canvasHeight = this.squareHeight * 10 + 5 * this.squareHeight;
      this.map = null;
      this.collissions = null;
      this.frontend = null;
    }

    Battle.prototype.createMap = function() {
      var context, mapCanvas;
      mapCanvas = document.createElement('canvas');
      mapCanvas.width = this.canvasWidth;
      mapCanvas.height = this.canvasHeight;
      this.gameHolder.append(mapCanvas);
      context = mapCanvas.getContext('2d');
      return this.map = new Map({
        'context': context,
        'position': {
          'top': 0,
          'left': 0
        },
        'squareHeight': this.squareHeight
      });
    };

    Battle.prototype.createCollissions = function(frontend) {
      var collissionsCanvas, context;
      collissionsCanvas = document.createElement('canvas');
      collissionsCanvas.width = this.canvasWidth;
      collissionsCanvas.height = this.canvasHeight;
      this.gameHolder.append(collissionsCanvas);
      context = collissionsCanvas.getContext('2d');
      this.collissions = new Collissions({
        'holder': this.map,
        'context': context,
        'canvas': collissionsCanvas
      });
      frontend.collissions = this.collissions;
      collissionsCanvas.onmousedown = function(e) {
        return frontend.checkMouseDown(e);
      };
      collissionsCanvas.onmousemove = function(e) {
        return frontend.checkMouseMove(e);
      };
      return collissionsCanvas.onmouseup = function(e) {
        return frontend.checkMouseUp(e);
      };
    };

    Battle.prototype.createPlanes = function() {
      var context, order, plane, planeCanvas, _i, _results;
      _results = [];
      for (order = _i = 0; _i <= 2; order = ++_i) {
        planeCanvas = document.createElement('canvas');
        planeCanvas.width = this.canvasWidth;
        planeCanvas.height = this.canvasHeight;
        this.gameHolder.append(planeCanvas);
        context = planeCanvas.getContext('2d');
        plane = new Plane({
          'context': context,
          'position': {
            'top': this.squareHeight * 11,
            'left': this.squareHeight * 5 * order
          },
          'squareHeight': this.squareHeight,
          'droppingArea': this.map,
          'order': order
        });
        _results.push(this.frontend.addPlane(plane));
      }
      return _results;
    };

    Battle.prototype.init = function() {
      this.createMap();
      this.frontend = new Frontend(this.map);
      this.createPlanes();
      return this.createCollissions(this.frontend);
    };

    return Battle;

  })();

  window.Battle = Battle;

}).call(this);
